---
title: ServiceNow
format: html
---

## Setup ServiceNow Developer Instance

### Create Instance
Follow steps [here](https://developer.servicenow.com/dev.do#!/learn/learning-plans/tokyo/new_to_servicenow/app_store_learnv2_buildmyfirstapp_tokyo_personal_developer_instances){target="_blank"}

### Acquire Relevant Instance Credentials
1. Login into the developer [site](https://developer.servicenow.com/dev.do){target="_blank"}
2. Click on the drop down arrow near your profile in top right corner and select "Manage Instance Password"
        ![](../../images/snow_creds.png)
3. Save values for:
    * Instance URL (e.g. https://dev123456.service-now.com/)
    * Username (e.g. admin)
    * Password
4. Exit. Within "My Instance" view, select "Start Building"
5. Select "All" in the top navigation panel and search "System OAuth" and select "Application Registry"
        ![](../../images/snow_application_registry.png)
6. In the top right select "New" and select "Create an OAuth API endpoint for external clients"
        ![](../../images/snow_create_OAuth_application.png)
7. Enter necessary details and save the **Client ID** and **Client Secret** for later use
        ![](../../images/snow_applicationi_registry_credentials.png)

## Assistant Integration
There are two ways in which the ServiceNow application can be integrated to the Assistant:

* [watson<span style="color:#2c62f5;">x</span> Orchestrate Skill](#watson<span style="color:#2c62f5;">x</span>-orchestrate-skill)
* [Assistant Custom Extension](#assistant-custom-extension)

### watson<span style="color:#2c62f5;">x</span> Orchestrate Skill
1. Within the watson<span style="color:#2c62f5;">x</span> orchestrate platform,  navigate to the sidebar and select **"Manage team"**
2. Select **"Skill sets" tab** 
    1. select the environment that you're working on from the drop down.
    1. Select "Connections" Tab
    1. Search for your desired connections
    1. Click on the three dots of that connection -> select "Connect App"

![](../../images/snow_connect_app.png)

3. A pop-up panel will appear. Enter values [Acquire Relevant Instance Credentials](#acquire-relevant-instance-credentials):
    * **Enpoint URL** -> Step 3
    * **Username** -> Step 3
    * **Password** -> Step 3
    * **Client ID** -> Step 7
    * **Client Secret** -> Step 7
4. Select "Connect App". 
5. Once you've established the connection, navigate to the platforms sidebar and select **"AI Assistant Builder"**
6. Within the "Actions" section of the builder, select "New Action+" -> "Skill-based action" 
![](../../images/snow_create_skillbased_action.png)
7. Select from the list of ServiceNow Skill that's appropriate for your use case, and click "Next"
8. When prompted with "New action", enter starting phrases that users would enter to trigger this action. For example, for "Create an incident" skill, one could enter "create a servicenow incident" and "i want to submit servicenow incident".
![](../../images/snow_create_an_incident_example.png)

### Assistant Custom Extension

#### **Get Developer Instance Credentials and OpenAPI spec**

1. Login into the developer [site](https://developer.servicenow.com/dev.do){target="_blank"}
2. Click on the drop down arrow near your profile in top right corner and select "Manage Instance Password"
    ![](../../images/snow_creds.png)
3. Make note of the "username" and "password" values (this will be used later)
4. Exit out of the window and select "Start Building"
5. Press "All" in the header and search "REST API Explorer"
6. Press "Export OpenAPI Specification (YAML/JSON)"

#### **Edit Service Now OpenAPI spec**
1. Open the downloaded API spec
2. Remove the forward slash at the end of the url string within the "servers" block
3. Add BasicAuth Component to the OpenAPI spec (make sure each block is comma delimited):

<div style="margin-left: 35px;">
```json
"components":{
    "securitySchemes": {
        "basicAuth": {
            "type": "http",
            "scheme": "basic"
        }
    }
}
```
</div>
4. Save file

#### **Build Custom Extenstion**
1. Within watson<span style="color:#2c62f5;">x</span> Assistant, navigate to the sidebar and select "Integrations"
2. Select "Build Custom Extension"
3. For the "Basic Information" page fill out all appropriate fields and click "Next"
4. Upload the Service Now OpenAPI spec, click "Next" and then "Finish"
5. Within the extensions in Watson Assistant click "Add+" on the recently made Service Now custom extension
6. On the Authentication page fill out the username and password fields with the values saved from "Get Developer Instance Credentials and OpenAPI spec" step 3
7. Click "Next" and then "Finish"
